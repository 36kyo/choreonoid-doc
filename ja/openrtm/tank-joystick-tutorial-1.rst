TankJoystickチュートリアル(1)
=============================

.. contents::
   :local:
   :depth: 1


概要
----

本チュートリアルでは、OpenRTMの枠組みを用いて、以下の図に示す戦車型ロボットをジョイスティック（ゲームパッド）で操作するサンプルを実現します。このロボットはは２つのクローラと２軸の砲塔で構成されており、クローラによって移動したり砲身の向きを変えたりすることが可能です。砲身の先にはライトとカメラが搭載されており、これらを用いてライトで照らされた環境のカメラ画像を見ながらロボットで探索するという状況のシミュレーションを行うことができます。

本サンプル実行時の画面を以下に示します。中央のシーンビューではロボットに搭載されたカメラの視点で描画を行っています。

.. image:: images/TankJoystickScreenShot.png

本サンプルの実行には４軸以上の操作軸とひとつ以上のボタンを備えたジョイスティックが必要となりますが、ジョイスティックの実物がない場合でも、Choreonoid本体に含まれる「仮想ジョイスティックビュー」を用いてキーボードで操作することが可能です。

本サンプルはChoreonoid本体に付属のOpenRTMサンプルに含まれています。プロジェクトファイルは "OpenRTM-TankJoystick.cnoid" になります。


OpenRTMプラグインの導入
-----------------------

OpenRTMの機能をChoreonoid上で利用可能とするためには、 `OpenRTM-aist <http://openrtm.org/>`_ がOSにインストールされた上で、Choreonoidの :doc:`../install/options` のひとつである「OpenRTMプラグイン」もインストールされている必要があります。Choreonoidをソースコードからビルドしている場合は、ビルド時のCMakeの設定で、以下のオプションをONにするようにしてください。

* ENABLE_CORBA
* BUILD_CORBA_PLUGIN
* BUILD_OPENRTM_PLUGIN

OpenRTMプラグインがインストールされていると、Choreonoid起動時にメッセージビューに ::
  
 OpenRTMプラグインが読み込まれました。

と表示されます。
  
また、本チュートリアルのサンプルを含むOpenRTMのサンプルは、BUILD_OPENRTM_SAMPLESをONにすることでビルドされます。

シミュレーションプロジェクトの作成
----------------------------------

まずはシミュレーション対象となる仮想世界を構築し、シミュレーションの基本的な設定を行います。この手順の詳細については :doc:`../simulation/simulation-project` を参照してください。

まずはワールドアイテムを作成してください。次に今回使用するTankモデルをワールドアイテムの小アイテムとして読み込みます。TankモデルはChoreonoidのshareディレクトリの model/misc 以下に "tank.body" というモデルファイルとしてインストールされていますので、これをボディアイテムとして読み込みます。読み込んだアイテムに対してアイテムツリービュー上でチェックを入れて、シーンビューに表示してください。

環境モデルとしてはシンプルな床のモデルを使ってもよいのですが、今回はロボットが実際に稼働する場所の雰囲気を出すために、"Labo1"という研究プラント風のモデルを用いることにします。このモデルはshareディレクトリ以下の "model/Labo1/Labo1.wrl" というファイルになりますので、これもロボットモデルと同様にワールドアイテムの小アイテムとして読み込み、チェックをいれてください。

上記のモデルを読み込んだら、モデルに対して :ref:`simulation_setting_initial_status` を行っておきます。TankモデルがLabo1の床上に一致するように配置してください。

次に :ref:`simulation_creation_and_configuration_of_simulator_item` を行います。今回は :doc:`../simulation/pseudo-continuous-track` に対応したシミュレータアイテムであれば何でもよいのですが、標準のAISTシミュレータアイテムもこの機能に対応していますので、これを使えばOKです。これもワールドアイテムの小アイテムとして作成します。設定はデフォルトのままでもかまいません。

以上の作業を行うと、アイテムツリービューは以下のようになっているかと思います。 ::

 [ ] - World
 [/]   + Tank
 [/]   + Labo1
 [ ]   + AISTSimulator
 
:ref:`simulation-time-step` も行います。値としてはとりあえず 1000 [fps] を用いることにしましょう。

これでシミュレーションプロジェクトの土台が完成しましたので、適当なファイル名で :ref:`basics_project_save` を行っておきましょう。これ以降の作業についても、プロジェクトの設定が進むたびにプロジェクトファイルを保存しておくとよいでしょう。

ロボット入出力用RTCの導入
-------------------------





