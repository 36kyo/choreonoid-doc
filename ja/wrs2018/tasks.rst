競技タスクプロトタイプ
======================

.. contents::
   :local:


競技タスクプロトタイプのファイル
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

競技タスクのプロトタイプに対応するChoreonoid用シミュレーションプロジェクトは、Choreonoidソースの "sample/WRS2018" 以下に格納されています。プロジェクトのファイルは、対象タスク、使用ロボット、使用するシミュレータアイテムごとに分けられており、以下のファイル名になっています。

* タスク-ロボットモデル.py

ここで「タスク」には、本競技で設定されているT1〜T6のいずれかが入ります。

「ロボットモデル」には、以下の４つの中のどれかが入ります。

* DoubleArmV7S（双腕ロボット、簡易クローラ版）
* DoubleArmV7A（双腕ロボット、AGXクローラ版）
* AizuSpiderSS（Aizu Spiderロボット、簡易クローラ版）
* AizuSpiderSA（Aizu Spiderロボット、AGXクローラ版）

例えば、タスクT1で、簡易クローラ版の双腕ロボットを使うプロジェクトは、

* T1-DoubleArmV7S.py

というファイル名になります。

このファイルは通常のChoreonoidプロジェクトファイル(拡張子cnoid)とは異なり、Pythonスクリプトとして記述されています。これはChoreonoid起動時に--pythonオプションで指定することで、プロジェクトを読み込むことができます。例えば、ビルド済みのChoreonoidソースディレクトリにおいて、コマンドラインから ::

 bin/choreonoid --python sample/T1-DoubleArmV7S.py

と入力すると、Choreonoid起動後に "T1-DoubleArmV7S.py" のプロジェクトが読み込まれます。

なお、プロトタイプでは本競技で必要な全てのモデルが入っているわけではありません。現状ではあくまで競技の概要を知るためのテスト的なものとお考えください。また、タスクT6については現在開発中でプロトタイプは提供されていません。

ロボットモデルの紹介
~~~~~~~~~~~~~~~~~~~~

プロトタイプでは、`プラットフォームロボット <http://worldrobotsummit.org/download/201707/WRS_Disaster_Robotics_Category_A_standard_robot_platform_for_for_Simulation_Challenge_of_Tunnel_Disaster_Response_and_Recovery_Challenge-doc_jp.pdf>`_  のひとつである「双腕ロボット」（大阪大学開発）を使えるようにしています。（以下ではこれを「双腕重機ロボット」と呼ぶことにします。）このロボットモデルの外観を以下に示します。

.. image:: images/DoubleArmV7A.png

このモデルはクローラを使用していますが、クローラについて簡易的なシミュレーションを行うバージョンと、AGX Dynamicsを用いてより実機に近いシミュレーションを行うバージョンを用意しています。モデルのベース名は "DoubleArmV7" としており、これに "Simplified" の "S" または "AGX" の "A" を付与して、

* DoubleArmV7S（簡易クローラ版）
* DoubleArmV7A（AGXクローラ版）

というモデル名にしています。

モデルファイルは、Choreonoidソースの "share/model/DoubleArmV7" 以下に、"DoubleArmV7S.body"、"DoubleArmV7A.body" というファイル名で格納しています。

.. note:: 簡易クローラ版はChoreonoidの標準機能で利用可能で、プロトタイプではAISTシミュレータアイテムを使ってシミュレーションするように設定されています。AGXクローラ版を利用するためには、 :ref:`wrs2018_install_choreonoid` で述べたように、AGX DynamicsとAGX Dynamicsプラグインをインストールしておく必要があります。そちらはAGXシミュレータアイテムを使ってシミュレーションをします。

もうひとつのプラットフォームロボットとして、早稲田大学によって開発された "WAREC-1" も利用可能です。こちらの外観を以下に示します。

.. image:: images/WAREC1.png

このロボットは脚型ロボットの一種で、４脚型のロボットとして使うこともできますし、２脚で立たせてもう一方の２脚をアームとして使うことで、ヒューマノイドロボットのように使うことも可能となっています。

このロボットのモデルファイルは "share/model/WAREC1" 以下に "WAREC1.body" というファイル名で格納されています。ただし現状ではこのモデルを対象とした競技タスクプロトタイプは用意していません。

本競技では上記のプラットフォームロボットが設定されておりますが、ルール上はそれ以外のロボットでも参加可能です。競技タスクプロトタイプでは、会津大学と株式会社アイザックが共同で開発した "Aizu Spider" というロボットのモデルも利用できるようにしました。このロボットのモデルを以下に示します。

.. image:: images/AizuSpiderSA.png

このモデルは災害対応ロボットで一般的な構成となっており、メインクローラ２つと、前後のフリッパに搭載されるサブクローラを４つ備えています。またKinova社のJACO2アームを搭載しており、マニピュレーションも行えるようになっています。上の図に示したのはアームをひとつ搭載した単腕版で、プロトタイプでもこれを使用しています。双腕重機ロボットと同様に、クローラについて以下の２つのタイプがあります。

* AizuSpiderSS (簡易クローラ版）
* AizuSpiderSA (AGXクローラ版）

さらにアームの搭載数の違いから、以下のバリエーションモデルも用意されています。

* AizuSpiderNS (アーム無し、簡易クローラ版）
* AizuSpiderNA (アーム無し、AGXクローラ版）
* AizuSpiderDS (双腕、簡易クローラ版）
* AizuSpiderDA (双腕、AGXクローラ版）

これらのモデルのファイルは全てChoreonoidソースの "share/model/AizuSpider" 以下に収録されており、上記のモデル名に拡張子".body"がついたファイル名となっています。


競技タスクの紹介
----------------

本競技はT1〜T6の計６つのタスクで構成されます。ここではタスクプロトタイプの内容や操作方法を説明しながら、各タスクの概要を紹介します。各タスクの詳細や正確な競技ルールについては、 `ルールブック <http://worldrobotsummit.org/download/rulebook-en/rulebook-Tunnel_Disaster_Response_and_Recovery_Challenge.pdf>`_ をご覧ください。


タスクT1
~~~~~~~~

まずタスクT1の障害走破をみてみましょう。以下のようにChoreonoidを起動して、T1のプロトタイプを読み込んでみてください。（以下ではビルド済みのChoreonoidソースディレクトリ上でコマンドを実行するものとします。） ::

 bin/choreonoid --python sample/WRS2018/T1-DoubleArmV7S.py

すると以下のような画面が表示されるかと思います。

.. image:: images/T1-DoubleArmV7S.png

ここで `シミュレーションの開始 <../manuals/latest/simulation/execution-and-playback.html#id3>`_ を行いましょう。すると双腕重機ロボットをゲームパッドで操作できるようになります。ロボットをうまく操作して、不整地を乗り越え障害物を避けながら進んでみてください。

実際の競技では、調査対象となるターゲットマーカが環境中に複数設置される予定です。トンネル内を移動しながら、マーカの内容を読み取っていきます。また、これを遠隔操作で行う必要があります。遠隔操作の場合、ロボットに搭載されたカメラやセンサから得られる情報のみを頼りにタスクを遂行する必要があります。タスク遂行を高速かつ確実に行うためには、ロボットの自律性の向上も鍵になるかと思われます。

ここで読み込んだ "T1-DoubleArmV7S" のプロジェクトは、ロボットモデルのクローラが簡易版となっており、Choreonoidの標準機能のAISTシミュレータアイテムでシミュレーションを行うように設定しています。これにより、AGX Dynamicsのライセンスがなくても実行可能です。ただし、動かしていただければ分かるように、クローラ部は履帯が回転するわけではなく、クローラ部の剛体が無理やり地面に対して推力を発生して動くような仕組みになっています。このシミュレーションはクローラと環境との接触状況によっては動作が不安定になることもあり、不整地の上で動いていると突然ロボットが飛んだり転倒したりといったことも起こりえますが、そこはこのシミュレーション方式の限界ということでご了承ください。

実際の競技ではAISTシミュレータではなくAGXシミュレータでシミュレーションを行うようになっています。このプロトタイプも用意していますので、AGX Dynamicsを利用可能な方はそちらも試してみて下さい。その場合、双腕ロボットモデルであれば、"T1-DoubleArmV7A.py" を読み込みます。 ::

 bin/choreonoid --python sample/WRS2018/T1-DoubleArmV7A.py

ロボットの操作方法は簡易版と同じです。AGX版の場合、履帯の部分が実際にホイールのまわりを回転しながら推進するようになります。実際にこれを用いて不整地状の走行などを試していただければ、クローラの挙動がより実物に近くなっていることがお分かりいただけるかと思います。

次にAizu SpiderモデルでT1を試してみましょう。これまでと同様に、以下のプロジェクトを読み込みます。

* T1-AizuSpiderSS.py (簡易版）
* T1-AizuSpiderSA.py (AGX版）

Aizu Spider もゲームパッドで操作します。

ロボットの大きさが双腕重機ロボットよりも小さいため、不整地上の移動がより難しくなっているのが分かるかと思います。なお、簡易クローラの場合の不具合は、このAizu Spiderモデルでより顕著に出るため、不整地上の移動ではそのような症状が出ないようロボットの操作に気をつける必要があります。AGX版ではそのような不具合はほとんど出ないかと思います。

タスクT2
~~~~~~~~

T2は車両調査のタスクです。 

プロジェクトファイルは

* T2-DoubleArmV7S.py (双腕重機ロボット、簡易版）
* T2-DoubleArmV7A.py (双腕重機ロボット、AGX版）
* T2-AizuSpiderSS.py（Aizu Spider単腕、簡易版）
* T2-AizuSpiderSA.py（Aizu Spider単腕、AGX版）

を用意しています。 ::

 bin/choreonoid --python sample/WRS2018/T2-AizuSpiderSS.py

などとして、プロジェクトを読み込んでください。すると以下にようにモデルが表示されているかと思います。

.. image:: images/T2-AizuSpiderSS.png

ここでトンネル内に車両があります。これのドアを開けて、車内を調査します。

ドアはドアノブを操作して開けるようにしたく思っていますが、その部分は現在開発中です。その代わりにドアを少し開けてありますので、その隙間からハンドを入れることで開けることができるかと思います。ただしAISTシミュレータでは関節可動範囲を設定できないため、ドアのヒンジが可動範囲を超えても動いてしまいます。その部分はAGXシミュレータでは正しく動作します。

タスクT3
~~~~~~~~

タスクT3は道具を使用した車両内の調査と車両からの救助です。

プロジェクトファイルは以下を用意しています。

* T3-DoubleArmV7S.py (双腕重機ロボット、簡易版）
* T3-DoubleArmV7A.py (双腕重機ロボット、AGX版）
* T3-AizuSpiderSS.py（Aizu Spider単腕、簡易版）
* T3-AizuSpiderSA.py（Aizu Spider単腕、AGX版）

一見T2と同様の構成になっていますが、車内には要救助者（ダミーターゲット）が閉じ込められています。実際の競技では、ドアは通常の操作では開かなくなっていますので、まずスプレッダを使用してドアのロックやヒンジを切断し、ドアを移動させた上で、ダミーターゲットを車内より搬出するという作業になります。ただしこの部分は現在開発中です。今回のプロトタイプではT2にダミータゲットが追加されただけの状態となっています。

タスクT4
~~~~~~~~

T4は経路の確保を行うタスクです。

プロジェクトファイルは以下を用意しています。

* T4-DoubleArmV7S.py (双腕重機ロボット、簡易版）
* T4-DoubleArmV7A.py (双腕重機ロボット、AGX版）
* T4-AizuSpiderSS.py（Aizu Spider単腕、簡易版）
* T4-AizuSpiderSA.py（Aizu Spider単腕、AGX版）

プロトタイプでは、トンネル内に障害物がいくつか散らばっているので、それをロボットで押したり持ち上げたりして、これらの障害物を除去する操作を体験してください。双腕重機ロボットでも、Aizu Spiderでも、アームをうまく操作すれば障害物をつかんで持ち上げることも可能ですので、試してみて下さい。。正確な競技内容については、ルールブックをご参照ください。

タスクT5
~~~~~~~~

T5は消火作業のタスクです。

プロジェクトファイルは以下を用意しています。

* T5-DoubleArmV7S.py (双腕重機ロボット、簡易版）
* T5-DoubleArmV7A.py (双腕重機ロボット、AGX版）
* T5-AizuSpiderSS.py（Aizu Spider単腕、簡易版）
* T5-AizuSpiderSA.py（Aizu Spider単腕、AGX版）

このプロジェクトを読み込むと、トンネル内に以下の消火栓が設置されています。

.. image:: images/FireCabinet1.png

この消火栓の扉を開けると以下のようにホースのリールやバルブが入っています。

.. image:: images/FireCabinet2.png

ロボットをうまく操作して、消火栓の扉を開けて、リールを手前に引き出したり、バルブを回したりしてみてください。

このタスクも現在開発中であり、今後リールからホースを取り出せるようにします。消火栓内には今後ノズルも設置され、取り出したホースにノズルを接続し、バルブを回すと消火作業を開始することができます。トンネル内では火災が起きており、その箇所めがけてホースを操作します。ノズルのスイッチを入れると水が出ますので、それをうまく炎に当てて消火作業を行います。

タスクT6
~~~~~~~~

T6はショアリングとブリーチングを行うタスクです。このタスクも開発中で、プロトタイプはまだ用意できていません。
