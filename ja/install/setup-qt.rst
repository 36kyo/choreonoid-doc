Qtスタイルの変更による描画速度の改善
====================================

.. contents::
   :local:
   :depth: 1

.. highlight:: sh


.. _build_ubuntu_qt_style:

Qtのスタイルについて
--------------------

Choreonoidが利用しているGUIライブラリのQtでは、ボタン等のGUI部品の外観をカスタマイズする「スタイル」機能が備わっています。そして、Ubuntuのデフォルト状態では、このQtのスタイルが、Linuxの標準GUIライブラリである "GTK+" の外観と同じになるように設定されています。実はGTK+自体も見た目をカスタマイズする機能を備えているのですが、QtのGTK+スタイルは、GTK+においてカスタマイズされた見た目もダイナミックに反映してくれます。

これは外観の統一という点で大変素晴らしい機能なのですが、GTK+の動的なスタイル設定をQtでも反映させることにはやはりコストがかかってしまうようで、このデフォルト状態ではQtのGUI部品の描画が大変遅くなってしまいます。それでも通常のアプリケーションではさほど問題にならないのですが、Choreonoidでは例えばロボットの関節角の表示や変更を行うGUI機能があり、これをロボットの動きと連動させる場合などには、多くのGUI部品をスムーズに描画することが求められます。しかしQtのスタイルがGTK+スタイルであると、このような場合に描画がスムーズでなくなってしまいます。

これを解決するため、QtのスタイルをGTK+でないスタイルに変更しておくことをお勧めします。

スタイルの変更方法
------------------

Qt5では、環境変数 "QT_STYLE_OVERRIDE" を使ってスタイルを指定することができます。あらかじめ ::

 export QT_STYLE_OVERRIDE=スタイル名

としてからchoreonoidを起動するか、choreonoid起動時に ::

 QT_STYLE_OVERRIDE=スタイル名 コレオノイド実行ファイル

などとすればOKです。

利用できるスタイルとして、Ubuntu18.04に"qt5-style-plugins"パッケージをインストールした状態では、以下があるようです。

* gtk2
* cleanlooks
* cde
* motif
* plastique
* Windows
* Fusion
* bb10dark
* bb10bright

利用できるスタイルは、Choreonoidの "--list-qt-styles" オプションで確認できます。Choreonoidを以下のように実行してください。 ::

 choreonoid --list-qt-styles

デフォルトではgtkとなっていますが、この場合上述した問題がありますので、GUIの動きがスムーズでないと感じたら、他のスタイルに変えてみてください。おすすめはcleanlooksです。

よいスタイルがみつかったら、 ::

 export QT_STYLE_OVERRIDE=cleanlooks

といった記述をホームディレクトリの .profile 等のファイルにしておけば、OS起動の度に設定しなくてもよくなります。

GUIでスタイルを設定する方法
---------------------------

"qt5ct" というツールを使えば、GUIでQtのスタイル変更を行うことができます。

これを利用するにあたっては、まずqt5ctのパッケージをインストールします。 ::

 sudo apt install qt5ct

そして "QT_QPA_PLATFORMTHEME" という環境変数に "qt5ct" を設定しておきます。 ::

 export QT_QPA_PLATFORMTHEME=qt5ct

通常はこれを .profile などに記述しておくとよいでしょう。

また、上述した "QT_STYLE_OVERRIDE" については、このツールと競合してしまうようで、設定をクリアしておく必要があります。既に設定されている場合は ::

 unset QT_STYLE_OVERRIDE

でクリアできますが、 .profile に記述している場合はそちらも除去するようにします。

インストール・設定が完了したら、以下のコマンドで設定ツールを起動できます。 ::

 qt5ct

このツールはデスクトップ環境のアプリケーションメニューにおいて "Qt5 Settings" といった名前で登録されるようですので、そちらのメニューから起動してもOKです。

このツールを用いることで、GUI上から簡単にスタイルやフォントを変更することができます。結果もすぐにアプリケーションに反映されるようです。


スタイル変更による効果の確認方法
--------------------------------

スタイル設定の影響が大きいGUI機能として、 :ref:`pose_editing_joint_slider_view` がありますので、これによってスタイル変更の効果を確認できます。

確認にあたっては、関節の多いロボットモデルを読み込み、多数の関節を同時に動かす操作を行うとよいです。例えば、 :ref:`basics_project_sr1walk` でシミュレーションを実行します。プロジェクトを読み込んだら、 

1. :ref:`basics_switch_view_tabs` を行って、 :ref:`pose_editing_joint_slider_view` を表示します。
2. :ref:`basics_mainwindow_itemtreeview` 上で "SR1" をクリックして選択し、関節スライダビューの表示対象をこのロボットモデルにします。するとビュー上に多数のスライダが表示されるかと思います。
3. アイテムツリービュー上で "AISTSimulator" を選択し、シミュレーションできるようにします。
4. :ref:`basics_project_sr1walk` の説明に従って、シミュレーションを開始します。

シミュレーションが開始すると、ロボットの動きに応じて関節スライダも動くかと思います。この動きやロボットの表示のスムーズさが、Qtのスタイル設定によって変わってきます。Qtのスタイルがデフォルトのgtkの場合はあまりスムーズに動きませんが、これをcleanlooksなどに変更すると、動きがスムーズになるのではないかと思います。

