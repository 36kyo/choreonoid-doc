グラフィックス環境のセットアップ
================================

.. contents::
   :local:
   :depth: 1

.. highlight:: sh

グラフィックス環境について
--------------------------

Choreonoidではロボットや環境のモデルを三次元コンピュータグラフィックス(3DCG)で描画するようになっています。これを行うため、使用するPCのグラフィックス環境は以下を満たしている必要があります。

1. 三次元描画APIであるOpenGL（バージョン1.5以上、3.3以上を推奨）が利用可能であること
2. OpenGLについてGPUによるハードウェアアクセラレーションが利用可能であること

1については、:doc:`platform` であれば通常は利用可能となっています。Choreonoidが動作するためにまずはこれを満たしている必要があります。

その上で、快適に利用するためには2も満たしていることが望ましいです。そうでないと、3DCGの描画が極端に遅くなってしまうので、よほど簡単なモデルを利用するのでない限り、実用的ではなくなってしまいます。

WindowsであればPC購入時の状態で通常はOpenGLのハードウェアアクセラレーションが利用可能となっています。ただしWindowsを自前でインストールした場合は、搭載されているGPU用のグラフィックスドライバを別途インストールしなければならないこともありますので、ご注意ください。

Linuxでは、インストール直後にはアクセラレーションが十分に機能しなかったり、全く機能しないこともあります。その場合、別途グラフィックスドライバをインストールすることで改善できることがあり、これについては後述します。ただし、そもそも使用しているGPUがLinuxで十分にサポートされておらず、改善が難しい場合もあります。

仮想マシンで使用する場合も、OpenGLのハードウェアアクセラレーションが十分に機能しない場合があります。この場合、やはり描画が遅かったり、うまく描画できなかったりします。これは仮想マシン側の不備になります。一般的に仮想マシンはそのような不備があることが多いので、あまり使用は推奨できませんが、使用するとしてもこのことを承知の上で使うようにしてください。（ただし最近の仮想マシンでは状況が以前よりは改善されているようです。）

.. _setup_gpu_recommended_gpus:

推奨GPU
-------

Linux上では上記の2の条件を満たすことが容易なGPUとそうでないGPUがあります。また、Windows上であっても、GPUによってはChoreonoidの描画機能が限定される場合があります。これについて、現状で推奨できるGPUは以下になります。

* NVIDIA製のGeForce、Quadro等のGPU

 * 一番推奨できるGPUです。
 * Windows、Ubuntuの両方で、全く問題なく動作し、性能（描画速度）も申し分ないです。
 * Ubuntuで使用する場合は、後述するように別途プロプライエタリドライバをインストールする必要がありますが、このためのGUIツールが用意されており、比較的簡単にインストールを行うことができます。

* Intel CPU内蔵GPU（(HD Grraphics、UHD Graphics）

 * IntelのCore iシリーズ等のCPUに内蔵されているGPUです。こちらも動作についてはほぼ問題ありません。
 * 描画速度についてはNVIDIA製のGPUほど速くはありません。ただしあまり複雑なモデルを使用するのでなければ、十分実用的な性能を持っています。
 * Ubuntuにおいても標準のドライバがよく出来ており、Ubuntuをインストールしたままの状態で十分な性能を発揮できます。
 * ただしUbuntu 18.04以降でインストールされるドライバではChoreonoidの実装と相性が悪い点があるようで、Ubuntuの18.04以降では一部の描画機能が利用できなくなります。（正確には、描画がおかしくなるのを避けるため、影を描画する機能を利用できないようにしています。）この点は今後Choreonoid側で改善したく思っています。
 * 古い型番のものはドライバによらず上記と同様の不具合が発生するため、その場合も影を描画する機能は利用できないようにしています。

AMD製のRadeon等のGPUは現状では推奨できません。AMD製のGPUはLinuxのサポートが十分ではなく、Linux上ではOpenGLによる描画が遅かったり、うまく描画できなかったり、最悪の場合クラッシュしてOSごと固まる場合もあるようです。また、Windowsであっても、Choreonoidの描画コードとの相性が悪いのか、影がうまく描画されないといった問題が出ます。（これについてもやはり影の利用に制限をかけています。）このようにAMD製のGPUは問題が出ることが多いため、GPUの選択ができるのであれば、なるべくNVIDIA製がIntel製のGPUを使用するようにしてください。

WindowsにおけるGPUドライバのインストール
----------------------------------------

Windowsでは適切なドライバが標準でインストールされていることが多いため、通常はあまり気にしなくても大丈夫です。Choreonoidで三次元モデルの描画がうまくいかない場合は、ドライバが正しくインストールされているか確認するようにしてください。

.. _build_ubuntu_gpu_driver:
.. _setup_gpu_ubuntu_gpu_driver:

Ubuntu LinuxにおけるGPUドライバのインストール
---------------------------------------------

Linuxの場合はGPUドライバを別途インストールしなければならない場合があります。以下ではその方法についてGPUのタイプごとに説明します。

NVIDIA製GPUの場合
^^^^^^^^^^^^^^^^^

NVIDIA製のGeForceやQuadroといったGPUを搭載しているPCの場合、Ubuntu Linuxにデフォルトでインストールされるドライバはオープンソース版の "Nouveau" というものになります。これは残念ながら現状では3D描画のハードウェアアクセラレーションが十分に機能しないため、使用は推奨できません。

これに対して、NVIDIAが開発しているプロプライエタリ・ドライバを利用することができます。そちらはメーカーが自ら開発しているだけあって機能や性能は申し分なく、GPUの能力を最大限に利用することが可能です。

プロプライエタリ・ドライバの状態確認や導入は、Ubuntuの「ソフトウェアとアップデート」ツールを用いて行うことができます。このツールの「追加のドライバー」というタブにこの設定があります。（あるいは「追加のドライバー」というツールを単体で利用できる場合もあります。）

利用可能なドライバがある場合は「追加のドライバー」の領域に、

* NVIDIA binary driver - version 375.29をnvidia-375から使用します（プロプライエタリ,検証済み）

といった表示が出ます。これをクリックして選択し、「変更の適用」を実行することで、ドライバがインストールされ、使えるようになります。候補が複数表示される場合は、なるべくバージョンの新しいものや、「検証済み」と記されているものを選択するようにします。

Intel製GPUの場合
^^^^^^^^^^^^^^^^

Intel CPU内蔵のHD Graphics、UHD GraphicsといったGPUは、Ubuntu Linuxでは標準のドライバが機能するようになっています。これはオープンソースのドライバになりますが、Intelも開発に関わっているようで、Windows版のドライバと比べても遜色は無いようです。逆にIntel製GPUについては、Linux用のプロプライエタリ・ドライバーは存在しません。

AMD製GPUの場合
^^^^^^^^^^^^^^

上述のようにAMD製のGPUはLinuxのサポートが十分でなく、問題が生じることが多いですが、ドライバ自体はAMD製GPU用のものが用意されています。これもNVIDIA製GPUと同様に、オープンソース版とプロプライエタリ版の２つのドライバが利用可能です。それぞれ

* AMDGPU (オープンソース版）
* AMDGPU-PRO (プロプライエタリ版）

という名称がついています。  

Ubuntuをインストール後に標準で利用可能となるるのは、はやはりオープンソース版のAMDGPUドライバです。これに対して、プロプライエタリ版のAMDGPU-PROは手作業でインストールします。インストール方法についてはAMDがリリースしている以下のドキュメントを参照してください。

* `AMDGPU-PRO Driver for Linux® Release Notes <https://www.amd.com/en/support/kb/release-notes/rn-prorad-lin-amdgpupro>`_ (Ubuntu 16.04用ドライバを含むリリースノート）
* `Radeon™ Software for Linux® 19.30 Release Notes <https://www.amd.com/en/support/kb/release-notes/rn-amdgpu-unified-linux>`_ (Ubuntu 18.04用ドライバを含むリリースノート)
* `Radeon™ Software for Linux® Installation <https://amdgpu-install.readthedocs.io/en/latest/>`_ (インストール方法をまとめたドキュメント）

ただ、現状のAMDGPU-PROドライバについて、当方で調査した限りでは、オープンソース版のAMDGPUドライバとの決定的な差が分かりませんでした。AMGDPU-PROドライバを使用しても、やはり描画速度は（本来のGPUの性能と比べると）あまり速くはないようですし、オープンソース版と同様にクラッシュすることもあります。従って、現状では、プロプライエタリ版をインストールしたからといってAMD製GPUがLinux上で快適に使用できるようになるというわけでは必ずしも無いようです。

.. _setup_gpu_3d_rendering_engine:

三次元描画エンジン
------------------

グラフィックス環境については、GPUとそのドライバに加えて、Choreonoid側の設定が影響する部分もあります。それはChoreonoidの実装において三次元モデルの描画を担当する「三次元描画エンジン」と呼ばれる部分で、これについて以下の２つの実装が利用可能となっています。

1. 新描画エンジン（GLSL描画エンジン、OpenGL3.3以降に対応）
2. 旧描画エンジン（固定シェーダ描画エンジン、OpenGL1.5以降に対応）

最新の開発版ではデフォルトで新描画エンジンが使用されるようになっています。こちらはOpenGLバージョン3.3以降のAPIを使用するもので、GLSLというプログラマブルシェーダ言語を用いて描画機能を実装しています。

旧描画エンジンは、描画機能の点では新エンジンに劣っており、デフォルトでは使用されないようになっています。ただしOpenGLのバージョン1.5があれば使用できるので、かなり古いGPUを搭載したPCであったり、仮想マシン上で利用する場合など、OpenGLが十分にサポートされていない環境でも動作する可能性が高くなります。

通常はデフォルトの新描画エンジンを利用すればOKですが、それがうまく動作しない場合には、旧描画エンジンに切り替えて使用することができます。

.. note:: Choreonoidはこれまで旧描画エンジンをデフォルトとしていましたが、2019年の8月以降の開発版で、新描画エンジンをデフォルトにするように変更しました。以前より描画エンジンの切り替えを行っていた方はこの点注意するようにしてください。


描画エンジンの切り替え方法
--------------------------

描画エンジンの切り替えは、環境変数 "CNOID_USE_GLSL" を用いて行います。

この変数が定義されていないか、値として1が設定されていれば、新描画エンジンを使用します。一方、この変数に0を設定しておくと、旧描画エンジンが利用されるようになります。


Ubuntu Linuxの場合
^^^^^^^^^^^^^^^^^^

Choroenoidをコマンドラインから起動する際に、 ::

 CNOID_USE_GLSL=0 choreonoid ...

などとすれば、旧描画エンジンが使用されるようになります。この方法だと起動の度に描画エンジンを選択できます。（0を1に変更すると新描画エンジンになります。）

あらかじめ ::

 export CNOID_USE_GLSL=0

と設定しておけば、最初のように起動しなくても、旧描画エンジンが使用されるようになります。旧描画エンジンを使用しなければならない環境の場合は、これをホームディレクトリの .profile などに記述しておくと、毎回設定しなくてもよくなります。

新描画エンジンに戻す場合は ::

 unset CNOID_USE_GLSL

として変数の定義をクリアするか、 ::

 export CNOID_USE_GLSL=1

としてください。

Windowsの場合
^^^^^^^^^^^^^

Windowsでもコマンドプロンプトを使えば上記と同様に切り替えることもできるかと思います。

ただしWindowsではコマンドプロンプトの使用は一般的ではないので、通常はシステムの設定として行っておくことになります。

Windows上での環境変数の設定方法は、 :doc:`build-windows` の :ref:`build_windows_openrtm_plugin` の説明を参考にしてください。

OpenGLバージョンの確認方法
--------------------------

OpenGLのバージョンは、WindowsであればGPUメーカーの提供する設定用ツールなどを用いて確認することができます。

Ubuntuでもそのようなツールが利用可能なことがありますが、他には "glxinfo" というコマンドを用いて確認することができます。このコマンドは ::

 sudo apt install mesa-utils

を実行するとインストールされます。そして ::

 glxinfo

を実行することでその環境で利用可能なOpenGLに関する情報が表示されます。この中に ::

 OpenGL version string: 4.5.0 NVIDIA 375.39

といった表示があれば、OpenGLの4.5.0までサポートされていることになります。

あるいは、Choreonoid起動時に、 :ref:`basics_mainwindow_messageview` に

 OpenGL 3.3 (NVIDIA Corporation Quadro P3200 with Max-Q Design/PCIe/SSE2, GLSL 3.30 NVIDIA via Cg compiler) が "シーン" ビューで利用可能です．

といった情報が出力されますので、そちらで確認することもできます。（ここで最後にGLSLのバージョンが表示されていれば、新描画エンジンが有効になっています。旧描画エンジンの場合はGLSLバージョンの表示はされません。）


GPU性能の確認方法
-----------------

:ref:`basics_sceneview_sceneview` の :ref:`basics_sceneview_config_dialog` にある「FPSテスト」というボタンを押すと、シーンを360度回転させるアニメーションを行なって、これにかかるフレームレートを表示します。この機能により描画速度が分かりますので、GPUやGPUドライバを変更した際などに、描画速度の変化を確認することができます。テストは何らかのモデルやプロジェクトを読み込んで、モデルが表示されている状態で行うとよいでしょう。
